@namespace("ru.yandex.practicum.kafka.telemetry.event")
protocol HubEventProtocol {
	/**
	 * Типы устройств.
	 */
	enum DeviceTypeAvro {
		MOTION_SENSOR,
		TEMPERATURE_SENSOR,
		LIGHT_SENSOR,
		CLIMATE_SENSOR,
		SWITCH_SENSOR
	}

	/**
	 * Типы условий для сценариев.
	 */
	enum ConditionTypeAvro {
		MOTION,
		LUMINOSITY,
		SWITCH,
		TEMPERATURE,
		CO2LEVEL,
		HUMIDITY
	}

	/**
	 * Операторы, которые допустимы для построения условий.
	 */
	enum ConditionOperationAvro {
		EQUALS,
		GREATER_THAN,
		LOWER_THAN
	}

	/**
	 * Событие добавления устройства.
	 */
	enum ActionTypeAvro {
		ACTIVATE,
		DEACTIVATE,
		INVERSE,
		SET_VALUE
	}

	/**
	 * Событие добавления устройства.
 	 */
	record DeviceAddedEventAvro {
		/**
		 * Уникальный идентификатор устройства.
 		 */
		string id;
		/**
	  	 * Тип устройства.
 		 */
		DeviceTypeAvro type;
	}

	/**
	 * Событие удаления устройства.
 	 */
	record DeviceRemovedEventAvro {
		/**
		 * Уникальный идентификатор устройства.
		 */
		string id;
	}

	/**
	 * Условия активации сценария.
	 */
	record ScenarioConditionAvro {
		/**
		 * Идентификатор устройства.
		 */
		string sensor_id;
		/**
		 * Тип условия.
		 */
		ConditionTypeAvro type;
		/**
		 * Операция, применяемая к условию.
		 */
		ConditionOperationAvro operation;
		/**
		 * Значение для сравнения в условиях.
		 */
		union{null, int, boolean} value = null;
	}

	/**
	 * Действия, выполняемые устройством в рамках сценария.
	 */
	record DeviceActionAvro {
		/**
		 * Идентификатор устройства.
		 */
		string sensor_id;
		/**
		 * Тип действия.
		 */
		ActionTypeAvro type;
		/**
		 * Значение для сравнения в условиях.
		 */
		int? value = null;
	}

	/**
	 * Событие добавления сценария.
	 */
	record ScenarioAddedEventAvro {
		/**
		 * Уникальное название сценария.
		 */
		string name;
		/**
		 * Набор условий активации сценария.
		 */
		array<ScenarioConditionAvro> conditions;
		/**
		 * Набор действий, выполняемых при активации сценария.
		 */
		array<DeviceActionAvro> actions;
	}

	/**
	 * Событие удаления сценария.
	 */
	record ScenarioRemovedEventAvro {
		/**
		 * Название сценария, уникальное в рамках хаба.
		 */
		string name;
	}

	/**
	 * Событие, происходящее в хабе.
	 */
	record HubEventAvro {
		/**
		 * Идентификатор хаба.
		 */
		string hub_id;
		/**
		 * Метка времени события.
		 */
		timestamp_ms timestamp;
		/**
		 * Поле, содержащее одно из возможных событий (добавление/удаление устройства, добавление/удаление сценария).
		 */
		union{DeviceAddedEventAvro, DeviceRemovedEventAvro, ScenarioAddedEventAvro, ScenarioRemovedEventAvro} payload;
	}

}